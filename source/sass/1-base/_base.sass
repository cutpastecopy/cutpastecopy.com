@import '0-tools/normalize'

// Custom Mixin(s)

/// Base path for assets (fonts, images...),
/// should not include trailing slash
/// @access public
/// @type String
$asset-base-path: '../assets' !default

/// Asset URL builder
/// @access private
/// @param {String} $type - Asset type, matching folder name
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the asset
@function asset($type, $file)
  @return url($asset-base-path + '/' + $type + '/' + $file)

/// Image asset helper
/// @access public
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the image
/// @require {function} asset
@function image($file)
  @return asset('images', $file)

/// Font asset helper
/// @access public
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the font
/// @require {function} asset
@function font($file)
  @return asset('fonts', $file)

/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin simplePrefix($property, $value, $prefixes: ())
  @each $prefix in $prefixes
    #{'-' + $prefix + '-' + $property}: $value

  // Output standard non-prefixed declaration
  #{$property}: $value

/// Mixin to prefix several properties at once
/// @author Hugo Giraudel
/// @param {Map} $declarations - Declarations to prefix
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin advancedPrefix($declarations, $prefixes: ())
  @each $property, $value in $declarations
    @each $prefix in $prefixes
      #{'-' + $prefix + '-' + $property}: $value

    // Output standard non-prefixed declaration
    #{$property}: $value


// Mixin to center an element
// @author css-tricks.com
// Assuming the parent element has (position: relative;), these four properties
// will center a child element both horizontally and vertically inside, no matter
// what the width of height of either are.
// Although beware if the child element being centered is taller than parent,
// the top could get cut off.
@mixin simpleCenter
  position: absolute
  top: 50%
  left: 50%
  transform: translate(-50%, -50%)

// Mixin to center an element
// @author css-tricks.com
// @param {boolean} $horizontal - if true, will center horizontally
// @param {boolean} $vertical - if true, will center vertically
@mixin advancedCenter($horizontal: true, $vertical: true)
  position: absolute
  @if ($horizontal and $vertical)
    top: 50%
    left: 50%
    transform: translate(-50%, -50%)
  @else if ($horizontal)
    left: 50%
    transform: translate(-50%, 0)
  @else if ($vertical)
    top: 50%
    transform: translate(0, -50%)

// Basic Styles

html,
body
  min-height: 100vh

body
  background: $bg-color
  font-size: 14px
  line-height: 1.6
  font-family: 'Fira Sans', 'Fira Mono', sans-serif
  color: $text-color
  -webkit-font-smoothing: antialiased
  -webkit-text-size-adjust: 100%

//	Typography

.gigantic, .huge, .large, .bigger, .big,
h1, h2, h3, h4, h5, h6
  color: $text-color
  font-weight: bold

.gigantic
  font-size: 110px
  line-height: 1.09
  letter-spacing: -2px

.huge, h1
  font-size: 68px
  line-height: 1.05
  letter-spacing: -1px

.large, h2
  font-size: 42px
  line-height: 1.14

.bigger, h3
  font-size: 26px
  line-height: 1.38

.big, h4
  font-size: 22px
  line-height: 1.38

.small, small
  font-size: 10px
  line-height: 1.2

p
  margin: 0 0 20px 0

em
  font-style: italic

strong
  font-weight: bold

hr
  border: solid #ddd
  border-width: 1px 0 0
  clear: both
  margin: 10px 0 30px
  height: 0

// Links

a
  transition: color .4s
  color: #265C83

a:link, a:visited
  color: #265C83
a:hover
  color: #7FDBFF
a:active
  transition: color .3s
  color: #007BE6

.link
  text-decoration: none

// Selection colors (easy to forget)

::selection
  background: $selection-color

::-moz-selection
  background: $selection-color

img::selection
  background: transparent

img::-moz-selection
  background: transparent

body
  -webkit-tap-highlight-color: $selection-color
